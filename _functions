#!/bin/bash

OS="$(uname)"

# 'v' with no arguments opens the current directory in Vim, otherwise opens the
# given location
v() {
	if [ $# -eq 0 ]; then
		vim .
	else
		vim "$@"
	fi
}

# Simple calculator
calc() {
	local result=""
	result="$(printf "scale=10;%s\\n" "$*" | bc --mathlib | tr -d '\\\n')"
	#												└─ default (when `--mathlib` is used) is 20

	if [[ "$result" == *.* ]]; then
		# improve the output for decimal numbers
		# add "0" for cases like ".5"
		# add "0" for cases like "-.5"
		# remove trailing zeros
		printf "%s" "$result" |
			sed -e 's/^\./0./'  \
			-e 's/^-\./-0./' \
			-e 's/0*$//;s/\.$//'
	else
		printf "%s" "$result"
	fi
	printf "\\n"
}

# Create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@" || exit
}

# Determine size of a file or total size of a directory
fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh
	else
		local arg=-sh
	fi
	# shellcheck disable=SC2199
	if [[ -n "$@" ]]; then
		du $arg -- "$@"
	else
		du $arg -- .[^.]* *
	fi
}

# Show the weather or the moon
wea() {
	if [[ "$@" == "--moon" ]]
		then
			curl wttr.in/moon
	else
		if [[ "$#" -eq 1 ]]
			then
				curl wttr.in/~$1
		else
			curl wttr.in/lehi,utah
		fi
	fi
}

# analyze source (as)
# run ctags and cscope for c/c++
cs() {
	rm -rf cscope.files cscope.in.out cscope.out cscope.po.out tags
	find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" -name "*.cc" > cscope.files
	cscope -q -R -b -i cscope.files
	ctags .
}

get-external-ip() {
	dig +short myip.opendns.com @resolver1.opendns.com
}

all-git-status() {
	find ~ -name ".git" 2> /dev/null | sed 's/\/.git/\//g' | awk '{print "-------------------------\n\033[1;32mGit Repo:\033[0m " $1; system("git --git-dir="$1".git --work-tree="$1" status")}'
}

if test "$OS" = "Linux"; then
	enable-touchpad() {
		synclient TouchpadOff=0
	}

	disable-touchpad() {
		synclient TouchpadOff=1
	}

	restart-network() {
		systemctl restart NetworkManager
	}

	work-monitors() {
		xrandr --output eDP-1-1 --primary --mode 1920x1080 && xrandr --output DP-1-2 --mode 1920x1080 --right-of eDP-1-1 && xrandr --output DP-1-1 --mode 1920x1080 --left-of eDP-1-1
	}

	start-work() {
		disable-touchpad ; sleep 1 
		work-monitors ; sleep 1
		i3-msg restart; sleep 1
		postgres-stop; sleep 1
	}

	docker-stop() {
		systemctl stop docker
	}

	docker-start() {
		systemctl start docker
	}

	docker-status() {
		systemctl status docker
	}

	sdn() {
		sudo shutdown now
	}

	watch-psql-table() {
		watch 'psql -U $1 -d $2 -c "$3"'
	}

	postgres-start() {
		sudo service postgresql start
	}

	postgres-stop() {
		sudo service postgresql stop
	}

	# copy environment variable to the clipboard
	env-to-clip() {
		echo $1 | xclip -sel clip
	}

	# work functions
	watch-mysql-sg() {
		watch 'mysql -u $SG_USER -h $SG_HOST -p$SG_PASS $SG_TEST -e $1'
	}

	mysql-sg() {
		mysql -u $SG_USER -h $SG_HOST -p$SG_PASS $SG_TEST -e $1
	}

	login-gateway() {
		ssh -i $WORK_KEY root@$GATEWAY_HOST
	}

	login-dev-tincan() {
		ssh -i $WORK_KEY $TINCAN_USER@$TINCAN_DEV_HOST
	}

	login-tincan() {
		ssh -i $WORK_KEY $TINCAN_USER@$TINCAN_PROD_HOST
	}

	login-commandcenter() {
		ssh -i $WORK_KEY $COMMAND_CENTER_USER@$COMMAND_CENTER_PROD_HOST
	}

	mount-usb() {
		sudo mount /dev/sda1 /media/usb-drive
	}

	umount-usb() {
		sudo umount /media/usb-drive
	}
fi
