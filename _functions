#!/bin/bash

OS="$(uname)"

# 'v' with no arguments opens the current directory in Vim, otherwise opens the
# given location
v() {
	if [ $# -eq 0 ]; then
		vim .
	else
		vim "$@"
	fi
}

sv() {
	if [ $# -eq 0 ]; then
		sudo vim .
	else
		sudo vim "$@"
	fi
}

# Simple calculator
calc() {
	local result=""
	result="$(printf "scale=10;%s\\n" "$*" | bc --mathlib | tr -d '\\\n')"
	#												└─ default (when `--mathlib` is used) is 20

	if [[ "$result" == *.* ]]; then
		# improve the output for decimal numbers
		# add "0" for cases like ".5"
		# add "0" for cases like "-.5"
		# remove trailing zeros
		printf "%s" "$result" |
			sed -e 's/^\./0./'  \
			-e 's/^-\./-0./' \
			-e 's/0*$//;s/\.$//'
	else
		printf "%s" "$result"
	fi
	printf "\\n"
}

# Create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@" || exit
}

# Determine size of a file or total size of a directory
fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh
	else
		local arg=-sh
	fi
	# shellcheck disable=SC2199
	if [[ -n "$@" ]]; then
		du $arg -- "$@"
	else
		du $arg -- .[^.]* *
	fi
}

# Show the weather or the moon
wea() {
	if [[ "$@" == "moon" ]]
		then
			curl wttr.in/moon
	else
		if [[ "$#" -eq 1 ]]
			then
				curl wttr.in/~$1
		else
			curl wttr.in/lehi,utah
		fi
	fi
}

# analyze source (as)
# run ctags and cscope for c/c++
cs() {
	rm -rf cscope.files cscope.in.out cscope.out cscope.po.out tags
	find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" -name "*.cc" > cscope.files
	cscope -q -R -b -i cscope.files
	ctags .
}

enable-touchpad() {
	if test "$OS" = "Linux"; then 
		synclient TouchpadOff=0
	fi
}

disable-touchpad() {
	if test "$OS" = "Linux"; then
		synclient TouchpadOff=1
	fi
}

toggle-touchpad() {
	# TODO: fix this 
	(synclient | grep TouchpadOff.*1 && synclient TouchpadOff=0)>/dev/null && echo "TouchPad reactivated." && exit
	synclient TouchpadOff=1 && echo "TouchPad deactivated."
}

restart-network() {
	if test "$OS" = "Linux"; then
		systemctl restart NetworkManager
	fi	
}

work-monitors() {
	if test "$OS" = "Linux"; then
		xrandr --output eDP-1-1 --primary --mode 1920x1080 && xrandr --output DP-1-2 --mode 1920x1080 --left-of eDP-1-1 && xrandr --output DP-1-1 --mode 1920x1080 --right-of eDP-1-1
	fi
}

start-work() {
	if test "$OS" = "Linux"; then
		work-monitors
		i3-msg restart
		disable-touchpad
		i3-msg 'workspace 1; exec /usr/local/bin/termite'
		i3-msg 'workspace 2; exec /usr/bin/firefox'
		i3-msg 'workspace 3; exec scrachpad'
	fi
}

docker-stop() {
	if test "$OS" = "Linux"; then
		systemctl stop docker
	fi
}

docker-start() {
	if test "$OS" = "Linux"; then
		systemctl start docker
	fi
}

docker-status() {
	if test "$OS" = "Linux"; then
		systemctl status docker
	fi
}

sdn() {
	if test "$OS" = "Linux"; then
		sudo shutdown now
	fi
}
