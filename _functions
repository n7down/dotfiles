#!/bin/bash

# OS="$(uname)"

# 'v' with no arguments opens the current directory in Vim, otherwise opens the
# given location
v() {
	if [ $# -eq 0 ]; then
		vim .
	else
		vim "$@"
	fi
}

sv() {
	if [ $# -eq 0 ]; then
		sudo vim .
	else
		sudo vim "$@"
	fi
}

n() {
	if [ $# -eq 0 ]; then 
		nvim .
	else
		nvim "$@"
	fi
}

sn() {
	if [ $# -eq 0 ]; then
		sudo nvim .
	else
		sudo nvim "$@"
	fi
}

# https://askubuntu.com/questions/349262/run-a-nohup-command-over-ssh-then-disconnect
ssh-remote-bg() {
# ssh user@host "nohup command1 > /dev/null 2>&1 &; nohup command2; command3"
    ssh $1@$2 "nohup $3 > /dev/null 2>&1 &;"
}

# Simple calculator
calc() {
	local result=""
	result="$(printf "scale=10;%s\\n" "$*" | bc --mathlib | tr -d '\\\n')"
	#												└─ default (when `--mathlib` is used) is 20

	if [[ "$result" == *.* ]]; then
		# improve the output for decimal numbers
		# add "0" for cases like ".5"
		# add "0" for cases like "-.5"
		# remove trailing zeros
		printf "%s" "$result" |
			sed -e 's/^\./0./'  \
			-e 's/^-\./-0./' \
			-e 's/0*$//;s/\.$//'
	else
		printf "%s" "$result"
	fi
	printf "\\n"
}

# Create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@" || exit
}

# Determine size of a file or total size of a directory
fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh
	else
		local arg=-sh
	fi
	# shellcheck disable=SC2199
	if [[ -n "$@" ]]; then
		du $arg -- "$@"
	else
		du $arg -- .[^.]* *
	fi
}

# Show the weather or the moon
wea() {
	if [[ "$@" == "--moon" ]]
	then
		curl wttr.in/moon
	else
		if [[ "$#" -eq 1 ]]
		then
			curl wttr.in/~$1
		else
			curl wttr.in/lehi,utah
		fi
	fi
}

# analyze source (as)
# run ctags and cscope for c/c++
cs() {
	rm -rf cscope.files cscope.in.out cscope.out cscope.po.out tags
	find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" -name "*.cc" > cscope.files
	cscope -q -R -b -i cscope.files
	ctags .
}

get-external-ip() {
    dig +short myip.opendns.com @resolver1.opendns.com
}

all-git-status() {
    find ~ -name ".git" 2> /dev/null | sed 's/\/.git/\//g' | awk '{print "-------------------------\n\033[1;32mGit Repo:\033[0m " $1; system("git --git-dir="$1".git --work-tree="$1" status")}'
}

function countdown(){
	date1=$((`date +%s` + $1));
	while [ "$date1" -ge `date +%s` ]; do
		echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
		sleep 0.1
	done
}
function stopwatch(){
	date1=`date +%s`;
	while true; do
		echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
		sleep 0.1
	done
}

extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
            *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
                   c=(bsdtar xvf);;
            *.7z)  c=(7z x);;
            *.Z)   c=(uncompress);;
            *.bz2) c=(bunzip2);;
            *.exe) c=(cabextract);;
            *.gz)  c=(gunzip);;
            *.rar) c=(unrar x);;
            *.xz)  c=(unxz);;
            *.zip) c=(unzip);;
            *)     echo "$0: unrecognized file extension: \`$i'" >&2
                   continue;;
        esac

        command "${c[@]}" "$i"
        ((e = e || $?))
    done
    return "$e"
}

#restart-network() {
#    sudo systemctl restart NetworkManager
#}

#docker-stop() {
#    sudo systemctl stop docker
#}

#docker-start() {
#    sudo systemctl start docker
#}

#docker-status() {
#    sudo systemctl status docker
#}

# copy environment variable to the clipboard
#env-to-clip() {
#    echo $1 | xclip -sel clip
#}

#mount-usb() {
#    sudo mount /dev/sdc /media/usb-drive
#}

#umount-usb() {
#    sudo umount /media/usb-drive
#}

